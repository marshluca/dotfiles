" Encoding *******************************************************************
set fileencodings=utf-8,ucs-bom,cp936,gbk,gb2312,gb18030,big5,latin1

"set pastetoggle=<F2>
nnoremap <F2> :set invpaste paste?<CR>
imap <F2> <C-O><F2>
set pastetoggle=<F2>

" Whitespace stuff
" Use 2 spaces
set expandtab
set softtabstop=2
set smarttab

" Indenting *******************************************************************
set ai " Automatically set the indent of a new line (local to buffer)
set si " smartindent  (local to buffer)


" Scrollbars ******************************************************************
set sidescrolloff=2

" Windows *********************************************************************
"set equalalways " Multiple windows, when created, are equal in size
set splitbelow splitright

let mapleader = ","

"Vertical split then hop to new buffer
:noremap ,v :vsp<cr>
:noremap ,h :split<cr>

:noremap ,n :NERDTreeToggle<CR>
:noremap ,q :q<cr>
:noremap ,w :w<cr>
:noremap ,t :tabnew<cr>

" enable control + vim directionkey remapping [hjkl]
:noremap <C-J> <C-W>j
:noremap <C-K> <C-W>k
:noremap <C-H> <C-W>h
:noremap <C-L> <C-W>l



set showtabline=2 " File tabs allways visible

" Searching *******************************************************************
set hlsearch  " highlight search
set incsearch  " incremental search, search as you type
set ignorecase " Ignore case when searching
set smartcase " Ignore case when searching lowercase

" Colors **********************************************************************
set background=dark
syntax on
colorscheme vividchalk

" Status Line *****************************************************************
set showcmd
set statusline=[FORMAT=%{&ff}]\ [TYPE=%Y]\ [ASCII=\%03.3b]\ [HEX=\%02.2B]\ [POS=%04l,%04v][%p%%]\ [LEN=%L]\ %F%m%r%h%w

" Line Wrapping ***************************************************************
"set nowrap
set linebreak  " Wrap at word
set wrap

" Mappings ********************************************************************
" Professor VIM says '87% of users prefer jj over esc', jj abrams strongly disagrees
imap jj <Esc>

" File Stuff ******************************************************************
filetype plugin indent on

" Sessions ********************************************************************
" Sets what is saved when you save a session
set sessionoptions=blank,buffers,curdir,folds,help,resize,tabpages,winsize

" Misc ************************************************************************
set backspace=indent,eol,start
set matchpairs+=<:>
set vb t_vb= " Turn off the bell, this could be more annoying, but I'm not sure how
set noswapfile

" Set list Chars - for showing characters that are not
" normally displayed i.e. whitespace, tabs, EOL
function! Invisible_chars_show()
  set listchars=trail:.,tab:>-,eol:$
  set list
endfunction
function! Invisible_chars_hide()
  set nolist
endfunction


" Mouse ***********************************************************************
set mouse=a " Enable the mouse
behave xterm
set selectmode=mouse

" Omni Completion *************************************************************
autocmd FileType html :set omnifunc=htmlcomplete#CompleteTags
autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
autocmd FileType css set omnifunc=csscomplete#CompleteCSS
autocmd FileType xml set omnifunc=xmlcomplete#CompleteTags
autocmd FileType c set omnifunc=ccomplete#Complete
autocmd FileType ruby,eruby set omnifunc=rubycomplete#Complete " may require ruby compiled in

let filetype_m='objc'

let sphxfile = "$VIM/syntax/sphinx.vim"
au BufRead,BufNewFile production.sphinx.conf set filetype=sphinx

" fuzzyfinder_textmate ********************************************************
"map ,f :FuzzyFinderTextMate<CR>
map ,f :FuzzyFinderFile<CR>
map ,b :FuzzyFinderBuffer<CR>
let g:fuzzy_ignore = '.o;.obj;.bak;.exe;.pyc;.pyo;.DS_Store;.db'

" autocomplpop ***************************************************************
" complete option
set complete=.,w,b,u,t,k
let g:AutoComplPop_CompleteOption = '.,w,b,u,t,k'
"set complete=.
let g:AutoComplPop_IgnoreCaseOption = 0
let g:AutoComplPop_BehaviorKeywordLength = 2

set nobackup
set nowritebackup
set history=50    " keep 50 lines of command line history

" This is an alternative that also works in block mode, but the deleted
" text is lost and it only works for putting the current register.
"vnoremap p "_dp

" Only do this part when compiled with support for autocommands.
if has("autocmd")
  " Put these in an autocmd group, so that we can delete them easily.
  augroup vimrcEx
  au!

  " For all text files set 'textwidth' to 78 characters.
  autocmd FileType text setlocal textwidth=78

  " When editing a file, always jump to the last known cursor position.
  " Don't do it when the position is invalid or when inside an event handler
  " (happens when dropping a file on gvim).
  autocmd BufReadPost *
    \ if line("'\"") > 0 && line("'\"") <= line("$") |
    \   exe "normal g`\"" |
    \ endif

  augroup END

else

  set autoindent    " always set autoindenting on

endif " has("autocmd")

if has("folding")
  set foldenable
  set foldmethod=syntax
  set foldlevel=1
  set foldnestmax=2
  set foldtext=strpart(getline(v:foldstart),0,50).'\ ...\ '.substitute(getline(v:foldend),'^[\ #]*','','g').'\ '

" automatically open folds at the starting cursor position
" autocmd BufReadPost .foldo!
endif

" Always display the status line
set laststatus=2


" Maps autocomplete to tab
imap <Tab> <C-N>

" For Haml
au! BufRead,BufNewFile *.haml         setfiletype haml

" Press ^F from insert mode to insert the current file name
imap <C-F> <C-R>=expand("%")<CR>

" Use Ack instead of Grep when available
if executable("ack")
  set grepprg=ack\ -H\ --nogroup\ --nocolor
endif

" Color scheme
highlight NonText guibg=#060606
highlight Folded  guibg=blue guifg=white
highlight FoldColumn guibg=darkgrey guifg=white

" Numbers
set numberwidth=5

" Snippets are activated by Shift+Tab
let g:snippetsEmu_key = "<S-Tab>"

" Tab completion options
" (only complete to the longest unambiguous match, and show a menu)
set completeopt=longest,menu

" remove gui menus
set guioptions-=m
set go-=T